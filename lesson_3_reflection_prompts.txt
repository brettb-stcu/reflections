When would you want to use a remote repository rather than keeping all your work
local?

    1. When you're collaborating with other people
    2. When you want access to your work from multiple locations
    3. When you want to back up your work in case your current location is lost/damaged

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

	I  may have changes in process that I am not ready to commit and I don't 
	want to have them overwritten. Others may also be working on the project
	on features that I'm not ready to add to my local repository. Also, there
	may be conflicts between local and remote that need human interaction to
	resolve.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

	A fork is a copy of an existing GitHub repository which includes a reference
	to the original repository. It is useful when you don't have access to update
	an existing repository but you want to make changes and refer back to the 
	orignal work.
	
	A clone is a copy of an existing repository on GitHub that is downloaded to
	a local repository via the git clone my_url command.
	
	A branch is version of the repository that diverges at some point from the 
	master. It can be used to work on bugs or features while maintaining a 
	working copy of master.

What is the benefit of having a copy of the last known state of the remote
stored locally?

	By having the last known state of the remote stored locally you can 
	access the local copy without network access so get status and git diff
	work to let you know the status at the time that copy wash fetched/pulled
	from the remote

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
